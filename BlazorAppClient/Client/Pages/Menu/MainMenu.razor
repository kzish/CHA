@layout MainLayoutMenu
@page "/"
@page "/Menu"

@inject IJSRuntime js
@inject HttpClient http_client;
@using System.Web;
@inject ILogger<MainMenu> logger;

@inject State state
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]


<br />

@if (my_courses == null)
{
    <div class="row">
        <div class="col-md-12" style="display:flex;align-content:center;justify-content:center;">
            <Loading isloading="true" height="50" width="50"/>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12" style="display:flex;align-content:center;justify-content:center;">
            <p style="clear:both;">Loading courses...</p>
        </div>
    </div>
}
else
{

    <div class="row">
        @foreach (var item in my_courses)
        {
            <div class="col-md-4" style="margin-bottom:15px!important;">
                <a href="/Course/@item.Id" class="menu_link">
                    <div class="menu_item">
                        <div class="menu_item_title">
                            @item.CourseName
                        </div>
                        <center>
                            <br />
                            <img src="/assets/img/atom.png" class="menu_icon" />
                        </center>
                    </div>
                </a>
            </div>
        }
    </div>
    <br/>
    <div class="row">
        <div class="col-md-12">
            <Pagination MetaData="@MetaData" Spread="2" SelectedPage="@SelectedPage" />
        </div>
    </div>
}


@code {

    List<BlazorAppClient.Shared.Models.MCourse> my_courses = null;
    public BlazorAppClient.Shared.PaginationMetaData MetaData  = new BlazorAppClient.Shared.PaginationMetaData();
    int current_page = 0;//start at 0
    int page_size = 12;//how many per page


    protected override void OnInitialized()
    {
        base.OnInitialized();
        state.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        state.OnChange -= StateHasChanged;
    }

    protected override async Task OnInitializedAsync()
    {

        await FetchMyCourses();

    }

    private async Task SelectedPage(int page)
    {
        current_page = page;
        await FetchMyCourses();
    }

    private async Task<BlazorAppClient.Shared.CurrentUser> GetCurrentUser()
    {
        dynamic user_string = await local_storage.GetItemAsStringAsync("current_user");
        var current_user = JsonConvert.DeserializeObject<BlazorAppClient.Shared.CurrentUser>(user_string);
        return current_user;
    }



    private async Task FetchMyCourses()
    {
        try
        {
            var current_user = await GetCurrentUser();
            var response1 = await http_client
                   .GetAsync($"Courses/FetchMyCourses?asp_net_user_id={HttpUtility.UrlEncode(current_user.user_id)}&page_size={page_size}&page_number={current_page}");
            var response2 = await response1.Content.ReadAsStringAsync();
            //logger.LogWarning(response2);
            dynamic json = JsonConvert.DeserializeObject(response2);
            if(json.res=="ok")
            {

                my_courses = JsonConvert.DeserializeObject<List<BlazorAppClient.Shared.Models.MCourse>>(json.data.ToString());
                MetaData = JsonConvert.DeserializeObject<BlazorAppClient.Shared.PaginationMetaData>(json.paging_meta_data.ToString());
            }
            else
            {
                toastService.ShowError(json.data.ToString(), "Error");
            }
        }catch(Exception  ex)
        {
            toastService.ShowError(ex.Message,"Error");
        }

    }

}
